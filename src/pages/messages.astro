---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Messages - Freedom Stack v2">
  <main class="container mx-auto p-8">
    <h1 class="text-3xl font-bold mb-6">Messages</h1>
    
    <!-- Message form -->
    <div class="mb-8 p-6 bg-gray-100 rounded-lg">
      <h2 class="text-xl font-semibold mb-4">Send a Message</h2>
      <form id="messageForm" class="space-y-4">
        <div>
          <label for="author" class="block text-sm font-medium text-gray-700">Author</label>
          <input 
            type="text" 
            id="author" 
            name="author" 
            required 
            class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
          />
        </div>
        <div>
          <label for="text" class="block text-sm font-medium text-gray-700">Message</label>
          <textarea 
            id="text" 
            name="text" 
            required 
            rows="3"
            class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
          ></textarea>
        </div>
        <button 
          type="submit" 
          class="bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
        >
          Send Message
        </button>
      </form>
    </div>

    <!-- Messages list -->
    <div>
      <h2 class="text-xl font-semibold mb-4">Messages</h2>
      <div id="messagesList" class="space-y-4">
        <div class="text-gray-500">Loading messages...</div>
      </div>
    </div>
  </main>

  <script>
    import { ConvexHttpClient } from "convex/browser";
    import { api } from "../../convex/_generated/api.js";
    
    // Initialize Convex client
    const convex = new ConvexHttpClient(import.meta.env.PUBLIC_CONVEX_URL);
    
    // Load messages
    async function loadMessages() {
      try {
        const messages = await convex.query(api.messages.list);
        const messagesList = document.getElementById('messagesList');
        
        if (!messagesList) return;
        
        if (messages.length === 0) {
          messagesList.innerHTML = '<div class="text-gray-500">No messages yet. Send the first one!</div>';
          return;
        }
        
        messagesList.innerHTML = messages.map(message => `
          <div class="bg-white p-4 rounded-lg shadow border">
            <div class="font-semibold text-gray-900">${escapeHtml(message.author)}</div>
            <div class="text-gray-700 mt-1">${escapeHtml(message.text)}</div>
            <div class="text-xs text-gray-500 mt-2">
              ${new Date(message._creationTime).toLocaleString()}
            </div>
          </div>
        `).join('');
      } catch (error) {
        console.error('Error loading messages:', error);
        const messagesList = document.getElementById('messagesList');
        if (messagesList) {
          messagesList.innerHTML = 
            '<div class="text-red-500">Error loading messages. Please try again.</div>';
        }
      }
    }
    
    // Send message
    async function sendMessage(author: string, text: string) {
      try {
        await convex.mutation(api.messages.send, { author, text });
        await loadMessages(); // Reload messages
        return true;
      } catch (error) {
        console.error('Error sending message:', error);
        return false;
      }
    }
    
    // Escape HTML to prevent XSS
    function escapeHtml(text: string) {
      const div = document.createElement('div');
      div.textContent = text;
      return div.innerHTML;
    }
    
    // Handle form submission
    const messageForm = document.getElementById('messageForm') as HTMLFormElement;
    if (messageForm) {
      messageForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const formData = new FormData(e.target as HTMLFormElement);
        const author = formData.get('author') as string;
        const text = formData.get('text') as string;
        
        const submitButton = (e.target as HTMLFormElement).querySelector('button[type="submit"]') as HTMLButtonElement;
        if (submitButton) {
          submitButton.disabled = true;
          submitButton.textContent = 'Sending...';
        }
        
        const success = await sendMessage(author, text);
        
        if (success) {
          (e.target as HTMLFormElement).reset(); // Clear form
        } else {
          alert('Failed to send message. Please try again.');
        }
        
        if (submitButton) {
          submitButton.disabled = false;
          submitButton.textContent = 'Send Message';
        }
      });
    }
    
    // Load messages on page load
    loadMessages();
    
    // Optionally, poll for new messages every 5 seconds
    setInterval(loadMessages, 5000);
  </script>
</Layout> 